/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Grade5;

import java.awt.Point;
import javax.swing.JOptionPane;

/**
 *
 * @author VJ
 */
public class LevelOneDragDrop extends javax.swing.JFrame {
    Point excel1Position = null;
    Point excel2Position = null;
    Point excel3Position = null;
    Point ms1Position = null;
    Point ms2Position = null;
    Point ms3Position = null;
    Point pdf1Position = null;
    Point pdf2Position = null;
    Point pdf3Position = null;
    boolean isFinished = false;
    
    public LevelOneDragDrop() {
        setUndecorated(true);
        initComponents();
        
       
        NextButton.setVisible(false);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        NextButton = new javax.swing.JLabel();
        Pdf3 = new javax.swing.JLabel();
        Pdf1 = new javax.swing.JLabel();
        Ms3 = new javax.swing.JLabel();
        Ms1 = new javax.swing.JLabel();
        Excel2 = new javax.swing.JLabel();
        Excel1 = new javax.swing.JLabel();
        Pdf2 = new javax.swing.JLabel();
        Ms2 = new javax.swing.JLabel();
        Excel3 = new javax.swing.JLabel();
        FolderThree = new javax.swing.JLabel();
        FolderTwo = new javax.swing.JLabel();
        FolderOne = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        ExcelClone1 = new javax.swing.JLabel();
        ExcelClone2 = new javax.swing.JLabel();
        ExcelClone3 = new javax.swing.JLabel();
        MsClone1 = new javax.swing.JLabel();
        MsClone2 = new javax.swing.JLabel();
        MsClone3 = new javax.swing.JLabel();
        PdfClone1 = new javax.swing.JLabel();
        PdfClone2 = new javax.swing.JLabel();
        PdfClone3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        NextButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/nextbutton.png"))); // NOI18N
        NextButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                NextButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                NextButtonMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                NextButtonMousePressed(evt);
            }
        });
        getContentPane().add(NextButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(1390, 760, -1, -1));

        Pdf3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pdffile.png"))); // NOI18N
        Pdf3.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                Pdf3MouseDragged(evt);
            }
        });
        Pdf3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                Pdf3MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                Pdf3MouseReleased(evt);
            }
        });
        getContentPane().add(Pdf3, new org.netbeans.lib.awtextra.AbsoluteConstraints(1190, 510, -1, -1));

        Pdf1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pdffile.png"))); // NOI18N
        Pdf1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                Pdf1MouseDragged(evt);
            }
        });
        Pdf1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                Pdf1MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                Pdf1MouseReleased(evt);
            }
        });
        getContentPane().add(Pdf1, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 260, -1, -1));

        Ms3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/msfile.png"))); // NOI18N
        Ms3.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                Ms3MouseDragged(evt);
            }
        });
        Ms3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                Ms3MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                Ms3MouseReleased(evt);
            }
        });
        getContentPane().add(Ms3, new org.netbeans.lib.awtextra.AbsoluteConstraints(980, 590, -1, -1));

        Ms1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/msfile.png"))); // NOI18N
        Ms1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                Ms1MouseDragged(evt);
            }
        });
        Ms1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                Ms1MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                Ms1MouseReleased(evt);
            }
        });
        getContentPane().add(Ms1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1000, 230, -1, -1));

        Excel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/xlfile.png"))); // NOI18N
        Excel2.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                Excel2MouseDragged(evt);
            }
        });
        Excel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                Excel2MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                Excel2MouseReleased(evt);
            }
        });
        getContentPane().add(Excel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 570, -1, -1));

        Excel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/xlfile.png"))); // NOI18N
        Excel1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                Excel1MouseDragged(evt);
            }
        });
        Excel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                Excel1MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                Excel1MouseReleased(evt);
            }
        });
        getContentPane().add(Excel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 410, -1, -1));

        Pdf2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pdffile.png"))); // NOI18N
        Pdf2.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                Pdf2MouseDragged(evt);
            }
        });
        Pdf2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                Pdf2MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                Pdf2MouseReleased(evt);
            }
        });
        getContentPane().add(Pdf2, new org.netbeans.lib.awtextra.AbsoluteConstraints(1000, 400, -1, -1));

        Ms2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/msfile.png"))); // NOI18N
        Ms2.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                Ms2MouseDragged(evt);
            }
        });
        Ms2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                Ms2MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                Ms2MouseReleased(evt);
            }
        });
        getContentPane().add(Ms2, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 430, -1, -1));

        Excel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/xlfile.png"))); // NOI18N
        Excel3.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                Excel3MouseDragged(evt);
            }
        });
        Excel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                Excel3MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                Excel3MouseReleased(evt);
            }
        });
        getContentPane().add(Excel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(1180, 300, -1, -1));

        FolderThree.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pdffolder.png"))); // NOI18N
        getContentPane().add(FolderThree, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 565, -1, -1));

        FolderTwo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/msfolder.png"))); // NOI18N
        getContentPane().add(FolderTwo, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 400, -1, -1));

        FolderOne.setIcon(new javax.swing.ImageIcon(getClass().getResource("/excelfolder.png"))); // NOI18N
        getContentPane().add(FolderOne, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 230, -1, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/background.png"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        ExcelClone1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/xlfile.png"))); // NOI18N
        getContentPane().add(ExcelClone1, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 410, -1, -1));

        ExcelClone2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/xlfile.png"))); // NOI18N
        getContentPane().add(ExcelClone2, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 570, -1, -1));

        ExcelClone3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/xlfile.png"))); // NOI18N
        getContentPane().add(ExcelClone3, new org.netbeans.lib.awtextra.AbsoluteConstraints(1180, 300, -1, -1));

        MsClone1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/msfile.png"))); // NOI18N
        getContentPane().add(MsClone1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1000, 230, -1, -1));

        MsClone2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/msfile.png"))); // NOI18N
        getContentPane().add(MsClone2, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 430, -1, -1));

        MsClone3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/msfile.png"))); // NOI18N
        getContentPane().add(MsClone3, new org.netbeans.lib.awtextra.AbsoluteConstraints(980, 590, -1, -1));

        PdfClone1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pdffile.png"))); // NOI18N
        getContentPane().add(PdfClone1, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 260, -1, -1));

        PdfClone2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pdffile.png"))); // NOI18N
        getContentPane().add(PdfClone2, new org.netbeans.lib.awtextra.AbsoluteConstraints(1000, 400, -1, -1));

        PdfClone3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pdffile.png"))); // NOI18N
        getContentPane().add(PdfClone3, new org.netbeans.lib.awtextra.AbsoluteConstraints(1190, 510, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Excel1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Excel1MousePressed
        Excel1.setLocation(Excel1.getLocation().x + evt.getX() - Excel1.getWidth() / 2,
                        Excel1.getLocation().y + evt.getY() - Excel1.getHeight() / 2);
        this.excel1Position = ExcelClone1.getLocation();
    }//GEN-LAST:event_Excel1MousePressed

    private void Excel1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Excel1MouseReleased
        if (Excel1.getBounds().intersects(FolderOne.getBounds())) {
                    int x = FolderOne.getLocation().x + (FolderOne.getWidth() - Excel1.getWidth()) / 2;
                    int y = FolderOne.getLocation().y + (FolderOne.getHeight() - Excel1.getHeight()) / 2;
                    Excel1.setLocation(x, y);
                    Excel1.setVisible(false);
                    Excel1 = FolderOne;
                    Check();
                    
                }
        else if (Excel1.getBounds().intersects(FolderTwo.getBounds())) {
                    JOptionPane.showMessageDialog(null, "Incorrect Folder.");
                    Excel1.setLocation(excel1Position);
                    
                }
        else if (Excel1.getBounds().intersects(FolderThree.getBounds())) {
                    JOptionPane.showMessageDialog(null, "Incorrect Folder.");
                    Excel1.setLocation(excel1Position);
                    
                }
        else if (Excel1.getBounds().intersects(jLabel1.getBounds())) {
                    Excel1.setLocation(excel1Position);
                    
                }
        
        
    }//GEN-LAST:event_Excel1MouseReleased

    private void Excel1MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Excel1MouseDragged
        Excel1.setLocation(Excel1.getLocation().x + evt.getX() - Excel1.getWidth() / 2,
                        Excel1.getLocation().y + evt.getY() - Excel1.getHeight() / 2);
                repaint();
    }//GEN-LAST:event_Excel1MouseDragged

    private void Excel2MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Excel2MouseDragged
        Excel2.setLocation(Excel2.getLocation().x + evt.getX() - Excel2.getWidth() / 2,
                        Excel2.getLocation().y + evt.getY() - Excel2.getHeight() / 2);
                repaint();
    }//GEN-LAST:event_Excel2MouseDragged

    private void Excel2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Excel2MousePressed
        Excel2.setLocation(Excel2.getLocation().x + evt.getX() - Excel2.getWidth() / 2,
                        Excel2.getLocation().y + evt.getY() - Excel2.getHeight() / 2);
        this.excel2Position = ExcelClone2.getLocation();
    }//GEN-LAST:event_Excel2MousePressed

    private void Excel2MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Excel2MouseReleased
        if (Excel2.getBounds().intersects(FolderOne.getBounds())) {
                    int x = FolderOne.getLocation().x + (FolderOne.getWidth() - Excel2.getWidth()) / 2;
                    int y = FolderOne.getLocation().y + (FolderOne.getHeight() - Excel2.getHeight()) / 2;
                    Excel2.setLocation(x, y);
                    Excel2.setVisible(false);
                    Excel2 = FolderOne;
                    Check();
                    
                }
        else if (Excel2.getBounds().intersects(FolderTwo.getBounds())) {
                    JOptionPane.showMessageDialog(null, "Incorrect Folder.");
                    Excel2.setLocation(excel2Position);
                }
        else if (Excel2.getBounds().intersects(FolderThree.getBounds())) {
                    JOptionPane.showMessageDialog(null, "Incorrect Folder.");
                    Excel2.setLocation(excel2Position);
                }
        else if (Excel2.getBounds().intersects(jLabel1.getBounds())) {
                    Excel2.setLocation(excel2Position);
                    
                }
    }//GEN-LAST:event_Excel2MouseReleased

    private void Excel3MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Excel3MouseDragged
        Excel3.setLocation(Excel3.getLocation().x + evt.getX() - Excel3.getWidth() / 2,
                        Excel3.getLocation().y + evt.getY() - Excel3.getHeight() / 2);
                repaint();
    }//GEN-LAST:event_Excel3MouseDragged

    private void Excel3MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Excel3MouseReleased
        if (Excel3.getBounds().intersects(FolderOne.getBounds())) {
                    int x = FolderOne.getLocation().x + (FolderOne.getWidth() - Excel3.getWidth()) / 2;
                    int y = FolderOne.getLocation().y + (FolderOne.getHeight() - Excel3.getHeight()) / 2;
                    Excel3.setLocation(x, y);
                    Excel3.setVisible(false);
                    Excel3 = FolderOne;
                    Check();
                    
                }
        else if (Excel3.getBounds().intersects(FolderTwo.getBounds())) {
                    JOptionPane.showMessageDialog(null, "Incorrect Folder.");
                    Excel3.setLocation(excel3Position);
                }
        else if (Excel3.getBounds().intersects(FolderThree.getBounds())) {
                    JOptionPane.showMessageDialog(null, "Incorrect Folder.");
                    Excel3.setLocation(excel3Position);
                }
        else if (Excel3.getBounds().intersects(jLabel1.getBounds())) {
                    Excel3.setLocation(excel3Position);
                    
                }
    }//GEN-LAST:event_Excel3MouseReleased

    private void Excel3MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Excel3MousePressed
        Excel3.setLocation(Excel3.getLocation().x + evt.getX() - Excel3.getWidth() / 2,
                        Excel3.getLocation().y + evt.getY() - Excel3.getHeight() / 2);
        this.excel3Position = ExcelClone3.getLocation();
    }//GEN-LAST:event_Excel3MousePressed

    
    
    
    
    
    
    private void Ms1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Ms1MousePressed
        Ms1.setLocation(Ms1.getLocation().x + evt.getX() - Ms1.getWidth() / 2,
                        Ms1.getLocation().y + evt.getY() - Ms1.getHeight() / 2);
        this.ms1Position = MsClone1.getLocation();
    }//GEN-LAST:event_Ms1MousePressed

    private void Ms1MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Ms1MouseDragged
        Ms1.setLocation(Ms1.getLocation().x + evt.getX() - Ms1.getWidth() / 2,
                        Ms1.getLocation().y + evt.getY() - Ms1.getHeight() / 2);
                repaint();
    }//GEN-LAST:event_Ms1MouseDragged

    private void Ms1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Ms1MouseReleased
        if (Ms1.getBounds().intersects(FolderTwo.getBounds())) {
                    int x = FolderTwo.getLocation().x + (FolderTwo.getWidth() - Ms1.getWidth()) / 2;
                    int y = FolderTwo.getLocation().y + (FolderTwo.getHeight() - Ms1.getHeight()) / 2;
                    Ms1.setLocation(x, y);
                    Ms1.setVisible(false);
                   Ms1 = FolderTwo;
                   Check();
                }
        else if (Ms1.getBounds().intersects(FolderOne.getBounds())) {
                    JOptionPane.showMessageDialog(null, "Incorrect Folder.");
                    Ms1.setLocation(ms1Position);
                    
                }
        else if (Ms1.getBounds().intersects(FolderThree.getBounds())) {
                    JOptionPane.showMessageDialog(null, "Incorrect Folder.");
                    Ms1.setLocation(ms1Position);
                    
                }
        else if (Ms1.getBounds().intersects(jLabel1.getBounds())) {
                    Ms1.setLocation(ms1Position);
                    
                }
    }//GEN-LAST:event_Ms1MouseReleased

    private void Ms2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Ms2MousePressed
        Ms2.setLocation(Ms2.getLocation().x + evt.getX() - Ms2.getWidth() / 2,
                        Ms2.getLocation().y + evt.getY() - Ms2.getHeight() / 2);
        this.ms2Position = MsClone2.getLocation();
    }//GEN-LAST:event_Ms2MousePressed

    private void Ms2MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Ms2MouseDragged
        Ms2.setLocation(Ms2.getLocation().x + evt.getX() - Ms2.getWidth() / 2,
                        Ms2.getLocation().y + evt.getY() - Ms2.getHeight() / 2);
                repaint();
    }//GEN-LAST:event_Ms2MouseDragged

    private void Ms2MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Ms2MouseReleased
       if (Ms2.getBounds().intersects(FolderTwo.getBounds())) {
                    int x = FolderTwo.getLocation().x + (FolderTwo.getWidth() - Ms2.getWidth()) / 2;
                    int y = FolderTwo.getLocation().y + (FolderTwo.getHeight() - Ms2.getHeight()) / 2;
                    Ms2.setLocation(x, y);
                    Ms2.setVisible(false);
                    Ms2 = FolderTwo;
                    Check();
                }
        else if (Ms2.getBounds().intersects(FolderOne.getBounds())) {
                    JOptionPane.showMessageDialog(null, "Incorrect Folder.");
                    Ms2.setLocation(ms2Position);
                    
                }
        else if (Ms2.getBounds().intersects(FolderThree.getBounds())) {
                    JOptionPane.showMessageDialog(null, "Incorrect Folder.");
                    Ms2.setLocation(ms2Position);
                    
                }
        else if (Ms2.getBounds().intersects(jLabel1.getBounds())) {
                    Ms2.setLocation(ms2Position);
                    
                }
    }//GEN-LAST:event_Ms2MouseReleased

    private void Ms3MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Ms3MousePressed
        Ms3.setLocation(Ms3.getLocation().x + evt.getX() - Ms3.getWidth() / 2,
                        Ms3.getLocation().y + evt.getY() - Ms3.getHeight() / 2);
        this.ms3Position = MsClone3.getLocation();
    }//GEN-LAST:event_Ms3MousePressed

    private void Ms3MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Ms3MouseDragged
        Ms3.setLocation(Ms3.getLocation().x + evt.getX() - Ms3.getWidth() / 2,
                        Ms3.getLocation().y + evt.getY() - Ms3.getHeight() / 2);
                repaint();
    }//GEN-LAST:event_Ms3MouseDragged

    private void Ms3MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Ms3MouseReleased
        if (Ms3.getBounds().intersects(FolderTwo.getBounds())) {
                    int x = FolderTwo.getLocation().x + (FolderTwo.getWidth() - Ms3.getWidth()) / 2;
                    int y = FolderTwo.getLocation().y + (FolderTwo.getHeight() - Ms3.getHeight()) / 2;
                    Ms3.setLocation(x, y);
                    Ms3.setVisible(false);
                    Ms3 = FolderTwo;
                    Check();
                  
                }
        else if (Ms3.getBounds().intersects(FolderOne.getBounds())) {
                    JOptionPane.showMessageDialog(null, "Incorrect Folder.");
                    Ms3.setLocation(ms3Position);
                    
                }
        else if (Ms3.getBounds().intersects(FolderThree.getBounds())) {
                    JOptionPane.showMessageDialog(null, "Incorrect Folder.");
                    Ms3.setLocation(ms3Position);
                    
                }
        else if (Ms3.getBounds().intersects(jLabel1.getBounds())) {
                    Ms3.setLocation(ms3Position);
                    
                }
    }//GEN-LAST:event_Ms3MouseReleased

    
    
    
    
    
    
    
    private void Pdf1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Pdf1MousePressed
        Pdf1.setLocation(Pdf1.getLocation().x + evt.getX() - Pdf1.getWidth() / 2,
                        Pdf1.getLocation().y + evt.getY() - Pdf1.getHeight() / 2);
        this.pdf1Position = PdfClone1.getLocation();
    }//GEN-LAST:event_Pdf1MousePressed

    private void Pdf1MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Pdf1MouseDragged
        Pdf1.setLocation(Pdf1.getLocation().x + evt.getX() - Pdf1.getWidth() / 2,
                        Pdf1.getLocation().y + evt.getY() - Pdf1.getHeight() / 2);
                repaint();
    }//GEN-LAST:event_Pdf1MouseDragged

    private void Pdf1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Pdf1MouseReleased
        if (Pdf1.getBounds().intersects(FolderThree.getBounds())) {
                    int x = FolderThree.getLocation().x + (FolderThree.getWidth() - Pdf1.getWidth()) / 2;
                    int y = FolderThree.getLocation().y + (FolderThree.getHeight() - Pdf1.getHeight()) / 2;
                    Pdf1.setLocation(x, y);
                    Pdf1.setVisible(false);
                    Pdf1 = FolderThree;
                   Check();
                }
        else if (Pdf1.getBounds().intersects(FolderOne.getBounds())) {
                    JOptionPane.showMessageDialog(null, "Incorrect Folder.");
                    Pdf1.setLocation(pdf1Position);
                    
                }
        else if (Pdf1.getBounds().intersects(FolderTwo.getBounds())) {
                    JOptionPane.showMessageDialog(null, "Incorrect Folder.");
                    Pdf1.setLocation(pdf1Position);
                    
                }
        else if (Pdf1.getBounds().intersects(jLabel1.getBounds())) {
                    Pdf1.setLocation(pdf1Position);
                    
                }
    }//GEN-LAST:event_Pdf1MouseReleased

    private void Pdf2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Pdf2MousePressed
        Pdf2.setLocation(Pdf2.getLocation().x + evt.getX() - Pdf2.getWidth() / 2,
                        Pdf2.getLocation().y + evt.getY() - Pdf2.getHeight() / 2);
        this.pdf2Position = PdfClone2.getLocation();
    }//GEN-LAST:event_Pdf2MousePressed

    private void Pdf2MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Pdf2MouseDragged
        Pdf2.setLocation(Pdf2.getLocation().x + evt.getX() - Pdf2.getWidth() / 2,
                        Pdf2.getLocation().y + evt.getY() - Pdf2.getHeight() / 2);
                repaint();
    }//GEN-LAST:event_Pdf2MouseDragged

    private void Pdf2MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Pdf2MouseReleased
        if (Pdf2.getBounds().intersects(FolderThree.getBounds())) {
                    int x = FolderThree.getLocation().x + (FolderThree.getWidth() - Pdf2.getWidth()) / 2;
                    int y = FolderThree.getLocation().y + (FolderThree.getHeight() - Pdf2.getHeight()) / 2;
                    Pdf2.setLocation(x, y);
                    Pdf2.setVisible(false);
                    Pdf2 = FolderThree;
                    Check();
                  
                }
        else if (Pdf2.getBounds().intersects(FolderOne.getBounds())) {
                    JOptionPane.showMessageDialog(null, "Incorrect Folder.");
                    Pdf2.setLocation(pdf2Position);
                    
                }
        else if (Pdf2.getBounds().intersects(FolderTwo.getBounds())) {
                    JOptionPane.showMessageDialog(null, "Incorrect Folder.");
                    Pdf2.setLocation(pdf2Position);
                    
                }
        else if (Pdf2.getBounds().intersects(jLabel1.getBounds())) {
                    Pdf2.setLocation(pdf2Position);
                    
                }
    }//GEN-LAST:event_Pdf2MouseReleased

    private void Pdf3MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Pdf3MousePressed
        Pdf3.setLocation(Pdf3.getLocation().x + evt.getX() - Pdf3.getWidth() / 2,
                        Pdf3.getLocation().y + evt.getY() - Pdf3.getHeight() / 2);
        this.pdf3Position = PdfClone3.getLocation();
    }//GEN-LAST:event_Pdf3MousePressed

    private void Pdf3MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Pdf3MouseDragged
        Pdf3.setLocation(Pdf3.getLocation().x + evt.getX() - Pdf3.getWidth() / 2,
                        Pdf3.getLocation().y + evt.getY() - Pdf3.getHeight() / 2);
                repaint();
    }//GEN-LAST:event_Pdf3MouseDragged

    private void Pdf3MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Pdf3MouseReleased
        if (Pdf3.getBounds().intersects(FolderThree.getBounds())) {
                    int x = FolderThree.getLocation().x + (FolderThree.getWidth() - Pdf3.getWidth()) / 2;
                    int y = FolderThree.getLocation().y + (FolderThree.getHeight() - Pdf3.getHeight()) / 2;
                    Pdf3.setLocation(x, y);
                    Pdf3.setVisible(false);
                    Pdf3 = FolderThree;
                    Check();
                }
        else if (Pdf3.getBounds().intersects(FolderOne.getBounds())) {
                    JOptionPane.showMessageDialog(null, "Incorrect Folder.");
                    Pdf3.setLocation(pdf3Position);
                    
                }
        else if (Pdf3.getBounds().intersects(FolderTwo.getBounds())) {
                    JOptionPane.showMessageDialog(null, "Incorrect Folder.");
                    Pdf3.setLocation(pdf3Position);
                    
                }
        else if (Pdf3.getBounds().intersects(jLabel1.getBounds())) {
                    Pdf3.setLocation(pdf3Position);
                    
                }
        
    }//GEN-LAST:event_Pdf3MouseReleased

    private void NextButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_NextButtonMouseEntered
        NextButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/nextbuttonhover.png")));
    }//GEN-LAST:event_NextButtonMouseEntered

    private void NextButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_NextButtonMouseExited
         NextButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/nextbutton.png")));
    }//GEN-LAST:event_NextButtonMouseExited

    private void NextButtonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_NextButtonMousePressed
       LevelOneType GFV = new LevelOneType();
       GFV.setLocationRelativeTo(null);
        GFV.setResizable(false);
        GFV.setVisible(true);
        dispose();
    }//GEN-LAST:event_NextButtonMousePressed
    
   
    private void Check(){
    if(Pdf1.equals(FolderThree) && Pdf2.equals(FolderThree) && Pdf3.equals(FolderThree)
            && Ms1.equals(FolderTwo) && Ms2.equals(FolderTwo) && Ms3.equals(FolderTwo)
                && Excel1.equals(FolderOne) && Excel2.equals(FolderOne) && Excel3.equals(FolderOne)){
    NextButton.setVisible(true);
    
    }
    
    }
    
   

    
    
    
    
    
    
    
    
    
    
    
    public static void main(String args[]) {
        
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LevelOneDragDrop().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Excel1;
    private javax.swing.JLabel Excel2;
    private javax.swing.JLabel Excel3;
    private javax.swing.JLabel ExcelClone1;
    private javax.swing.JLabel ExcelClone2;
    private javax.swing.JLabel ExcelClone3;
    private javax.swing.JLabel FolderOne;
    private javax.swing.JLabel FolderThree;
    private javax.swing.JLabel FolderTwo;
    private javax.swing.JLabel Ms1;
    private javax.swing.JLabel Ms2;
    private javax.swing.JLabel Ms3;
    private javax.swing.JLabel MsClone1;
    private javax.swing.JLabel MsClone2;
    private javax.swing.JLabel MsClone3;
    private javax.swing.JLabel NextButton;
    private javax.swing.JLabel Pdf1;
    private javax.swing.JLabel Pdf2;
    private javax.swing.JLabel Pdf3;
    private javax.swing.JLabel PdfClone1;
    private javax.swing.JLabel PdfClone2;
    private javax.swing.JLabel PdfClone3;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}
